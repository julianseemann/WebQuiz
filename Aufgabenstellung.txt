---Anforderungen vom Quiz--------------------------------

Mehrere Quizzes
Mehrere Fragen
Mehrere Antwortsmöglichkeiten, eine richtig
Methode die Punkte von Fragen auswerten kann
vllt implizit im Objekt vorhanden ... werden wir sehen                 
Auswertung von Punkten
Timing Funktion                            Adam
Auswertung nach Zeit pro Frage             Adam
Summiere Frage.punkte                       Adam
Auswertung nach Summe der Fragen           Adam   
Datenbank
Speicher User, Passwort, Id
Speicher Score, Id und Quiznamen
Scoreboard
Neuen Score hinzufügen                     Adam
Scores nach Größe sortieren                Adam
Design
einheitliches layout
benutzerfreundlich
halbwegs gut aussehend

---Codestruktur-----
class Frage
{
	int score;
	int getAntwortById; ( es gibt 4 Fragen also id wird 1,2,3,4 sein)
		boolean antwortisRichtig;
	int richtigId; 
	// in der näxten Runde optional -- int maxScore;

	void hatRichtigGeantwortet(int getAntwortById)
	{
		antwortisRichtig=getAntwortByID==richtigId;
	}
	void timer()                                           //methoden könnten auch statisch sein...werdma sehen
	{
		while(Frage.antwortisRichtig)
		{
			decrement(Frage.score);
		}
	}
	 void decrement(score)
	{
	transitionFunction(score);
	}

}
class Quiz
{
	Frage[] quiz;
	int score=0;
	User user=getCurrentUser();
	
	void sum()
	{
		for(frage a: quiz)
		{
		score+=a.score;
		}
	}
		

}
class QuizExemplar extends Quiz
{
	id int;
	String name;
}
class write
{
	writeScore();  //was in die datenbank und was als json geht werdma sehen.
	registerUser();
}
template Scoreboard
{
	QuizExemplar[] Scoreboard; // contains .name && .id && .user && .userId && score
	
	void sortScoreboard()
	{
		Scoreboard.sort(); //after Score.max
	} 
}
template User
{
	String name;
	Password password;
	getName();
	resumeSession();
	register()
}

--------------------------------------------------------	

Wenn ma mit dieser Runde fertig sind, kamma schauen, dass ma es no weiter polieren.
